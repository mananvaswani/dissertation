\contentsline {section}{\numberline {0.1}Blue Crystal 4}{iv}{section.0.1}% 
\contentsline {section}{\numberline {0.2}C\texttt {++} libraries/APIs}{iv}{section.0.2}% 
\contentsline {subsection}{\numberline {0.2.1}OpenMP}{iv}{subsection.0.2.1}% 
\contentsline {subsection}{\numberline {0.2.2}Armadillo}{iv}{subsection.0.2.2}% 
\contentsline {section}{\numberline {0.3}Intel VTune}{iv}{section.0.3}% 
\contentsline {section}{\numberline {0.4}Miscellaneous Tools}{v}{section.0.4}% 
\contentsline {subsection}{\numberline {0.4.1}Python, Matplotlib}{v}{subsection.0.4.1}% 
\contentsline {subsection}{\numberline {0.4.2}Godbolt Compiler Explorer}{v}{subsection.0.4.2}% 
\contentsline {chapter}{\numberline {1}Contextual Background}{1}{chapter.1}% 
\contentsline {chapter}{\numberline {2}The Boson Sampling Algorithm}{4}{chapter.2}% 
\contentsline {section}{\numberline {2.1}Mathematical Preliminaries}{4}{section.2.1}% 
\contentsline {subsection}{\numberline {2.1.1}Binary Gray Code}{4}{subsection.2.1.1}% 
\contentsline {subsection}{\numberline {2.1.2}Permanent of a matrix}{4}{subsection.2.1.2}% 
\contentsline {subsubsection}{Computing the permanent}{5}{section*.6}% 
\contentsline {subsection}{\numberline {2.1.3}Specifying the problem}{5}{subsection.2.1.3}% 
\contentsline {subsubsection}{Calculating the size of the sample space}{6}{section*.7}% 
\contentsline {section}{\numberline {2.2}The naive algorithm}{6}{section.2.2}% 
\contentsline {section}{\numberline {2.3}Algorithm A}{6}{section.2.3}% 
\contentsline {section}{\numberline {2.4}Algorithm B}{8}{section.2.4}% 
\contentsline {chapter}{\numberline {3}Algorithm Implementation}{11}{chapter.3}% 
\contentsline {section}{\numberline {3.1}Original R Implementation}{11}{section.3.1}% 
\contentsline {section}{\numberline {3.2}Implementation in C\texttt {++}}{12}{section.3.2}% 
\contentsline {subsection}{\numberline {3.2.1}Generating a random unitary matrix}{13}{subsection.3.2.1}% 
\contentsline {subsection}{\numberline {3.2.2}Computing the Permanent Minors}{13}{subsection.3.2.2}% 
\contentsline {paragraph}{a) Iterating $\mathbf {\delta }$ over Gray code:}{13}{section*.9}% 
\contentsline {paragraph}{b) Computing $\mathbf {v}(\mathbf {\delta }) = \{v_i (\mathbf {\delta }), i \in [m]\}$ efficiently for each $\mathbf {\delta }$:}{14}{section*.10}% 
\contentsline {paragraph}{c) Computing the partial products $\DOTSB \prod@ \slimits@ _{i \in [m] \setminus l} v_i (\delta ), \hskip 1em\relax l \in [m]$:}{14}{section*.11}% 
\contentsline {paragraph}{d) Computing the value $\left ( \DOTSB \prod@ \slimits@ _{s=1}^{m-1} \delta _s \right )$:}{15}{section*.12}% 
\contentsline {paragraph}{e) Multiplying by $\frac {1}{2^{m-2}}$ term:}{15}{section*.13}% 
\contentsline {subsection}{\numberline {3.2.3}Simulating exact Boson Sampling using Algorithm B}{15}{subsection.3.2.3}% 
\contentsline {paragraph}{Preprocessing steps}{16}{section*.14}% 
\contentsline {paragraph}{Line 2}{16}{section*.15}% 
\contentsline {paragraph}{Line 3 and 4}{16}{section*.16}% 
\contentsline {paragraph}{Lines 6 to 11}{17}{section*.17}% 
\contentsline {paragraph}{Line 12}{17}{section*.18}% 
\contentsline {section}{\numberline {3.3}Running the code}{17}{section.3.3}% 
\contentsline {section}{\numberline {3.4}Profiling the code}{17}{section.3.4}% 
\contentsline {section}{\numberline {3.5}Parallelising the code}{18}{section.3.5}% 
\contentsline {subsection}{\numberline {3.5.1}Parallelisation technique}{18}{subsection.3.5.1}% 
\contentsline {paragraph}{a) Getting the value of the active index $j$ in the $k^{\text {th}}$ iteration:}{19}{section*.19}% 
\contentsline {paragraph}{b) Getting the value of $k^{\text {th}}$ element of the Gray code:}{19}{section*.20}% 
\contentsline {paragraph}{c) Getting the value of \mintinline {c++}{s}:}{20}{section*.21}% 
\contentsline {paragraph}{d) Computing the $\mathbf {v}$ array for iteration $k$:}{20}{section*.22}% 
\contentsline {subsection}{\numberline {3.5.2}Using OpenMP to modify the code for use with multiple threads}{20}{subsection.3.5.2}% 
\contentsline {section}{\numberline {3.6}Other Optimisations}{21}{section.3.6}% 
\contentsline {subsection}{\numberline {3.6.1}Compiler choice}{21}{subsection.3.6.1}% 
\contentsline {paragraph}{GCC g\texttt {++} compiler: }{22}{section*.23}% 
\contentsline {paragraph}{Intel C\texttt {++} compiler: }{22}{section*.24}% 
\contentsline {subsection}{\numberline {3.6.2}Compiler options}{22}{subsection.3.6.2}% 
\contentsline {chapter}{\numberline {4}Critical Evaluation}{24}{chapter.4}% 
\contentsline {section}{\numberline {4.1}Initial implementation}{24}{section.4.1}% 
\contentsline {section}{\numberline {4.2}Testing the different compiler options/flags}{24}{section.4.2}% 
\contentsline {subsection}{\numberline {4.2.1}g\texttt {++}}{25}{subsection.4.2.1}% 
\contentsline {subsection}{\numberline {4.2.2}Intel compiler}{27}{subsection.4.2.2}% 
\contentsline {section}{\numberline {4.3}Multiple threads}{27}{section.4.3}% 
\contentsline {section}{\numberline {4.4}Final result}{29}{section.4.4}% 
\contentsline {chapter}{\numberline {5}Conclusion}{31}{chapter.5}% 
\contentsline {section}{\numberline {5.1}Achievements}{31}{section.5.1}% 
\contentsline {section}{\numberline {5.2}Future Works}{31}{section.5.2}% 
\contentsline {chapter}{\numberline {A}Appendix A}{36}{appendix.A}% 
